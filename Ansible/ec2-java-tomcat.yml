---
- name: Deploy EC2 instance with Security Group - wait for connection
  hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: exer-sec
    image: ami-00a205cb8e06c3c4e
    keypair: exercise
    region: eu-central-1
    count: 1
  tasks:
    - name: Create a security group
      ec2_group:
       name: "{{ security_group }}"
       description: Exercise security group
       region: "{{ region }}"
       rules:
         - proto: tcp
           from_port: 22
           to_port: 22
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 8080
           to_port: 8080
           cidr_ip: 0.0.0.0/0
    - name: Create a EC2 instance
      ec2:
       group: "{{ security_group }}"
       instance_type: "{{ instance_type }}"
       image: "{{ image }}"
       wait: true
       region: "{{ region }}"
       keypair: "{{ keypair }}"
       count: "{{count}}"
      register: ec2
    - name: Add the newly created host so that we can further contact it
      add_host:
        name: "{{ item.public_ip }}"
        groups: tomcatservers
      with_items: "{{ ec2.instances }}"
    - name: Add tag to Instance(s)
      ec2_tag:
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: tomcatservers
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22 
        state: started 
      with_items: "{{ ec2.instances }}"

- name: Java setup
  hosts: tomcatservers
  user: ec2-user
  roles:
    - role: geerlingguy.java
      become: yes
      java_packages:
        - java-1.8.0-openjdk

- name: Tomcat setup
  hosts: tomcatservers
  become: yes
  become_method: sudo
  remote_user: ec2-user

  tasks:

  - name: add tomcat group
    group:
      name: tomcat

  - name: add tomcat user
    user:
      name: tomcat
      group: tomcat
      home: /user/share/tomcat
      createhome: no

  - name: create /opt/tomcat directory
    file:
      path: /opt/tomcat
      state: directory
      mode: 0755

  - name: download & unarchive
    unarchive:
      src: https://apache.mirrors.tworzy.net/tomcat/tomcat-9/v9.0.39/bin/apache-tomcat-9.0.39.tar.gz
      dest: /opt/tomcat
      remote_src: yes
      extra_opts: [--strip-components=1]

  - name: Download HelloWorld
    get_url:
      url: https://tomcat.apache.org/tomcat-7.0-doc/appdev/sample/sample.war
      dest: /opt/tomcat/webapps

  - name: Change ownership
    file:
      path: /opt/tomcat
      owner: tomcat
      group: tomcat
      mode: "u+rwx,g+rx,o=rx"
      recurse: yes
      state: directory

  - name: Ansible create service file
    copy:
      dest: /etc/systemd/system/tomcat.service
      content: |
        [Unit]
        Description=Tomcat9
        After=network.target
        
        [Service]
        Type=forking
        SuccessExitStatus=143
        
        Environment=CATALINA_PID=/opt/tomcat/tomcat9.pid
        Environment=JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.265.b01-1.amzn2.0.1.x86_64/jre
        Environment=CATALINA_HOME=/opt/tomcat
        Environment=CATALINA_BASE=/opt/tomcat
        Environment="CATALINA_OPTS=-Xms512m -Xmx512m"    # optional
        Environment="JAVA_OPTS=-Dfile.encoding=UTF-8"    # optional
        ExecStart=/opt/tomcat/bin/startup.sh
        ExecStop=/opt/tomcat/bin/shutdown.sh
        
        [Install]
        WantedBy=multi-user.target

  - name: Start and enable Tomcat service
    systemd:
      name: tomcat
      state: started
      enabled: true
      daemon_reload: true

